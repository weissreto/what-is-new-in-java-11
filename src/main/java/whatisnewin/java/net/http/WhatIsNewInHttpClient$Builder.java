package whatisnewin.java.net.http;

import java.net.http.HttpClient.Builder;
import javax.net.ssl.SSLContext;
import java.time.Duration;
import javax.net.ssl.SSLParameters;
import java.net.http.HttpClient.Version;
import java.net.Authenticator;
import java.net.CookieHandler;
import java.net.ProxySelector;
import java.net.http.HttpClient;
import java.util.concurrent.Executor;
import java.net.http.HttpClient.Redirect;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Builder}
 * that were newly introduced in Java versions 11.<br>
 *
 * {@link Builder} is a completely new class
 * @since 11
 * @see Builder
 */
public final class WhatIsNewInHttpClient$Builder
{
  /**
   * Example usage of the new field {@link Builder#NO_PROXY}
   * @since 11
   * @see Builder#NO_PROXY
   */
  public static  final ProxySelector NO_PROXY = Builder.NO_PROXY;

  /**
   * Example call to new method {@link Builder#sslContext}
   * @since 11
   * @see Builder#sslContext
   */
  public Builder sslContext(SSLContext sslContext)
  {
    Builder testee = $$$();

    Builder result = testee.sslContext(sslContext);
    return result;
  }

  /**
   * Example call to new method {@link Builder#connectTimeout}
   * @since 11
   * @see Builder#connectTimeout
   */
  public Builder connectTimeout(Duration duration)
  {
    Builder testee = $$$();

    Builder result = testee.connectTimeout(duration);
    return result;
  }

  /**
   * Example call to new method {@link Builder#sslParameters}
   * @since 11
   * @see Builder#sslParameters
   */
  public Builder sslParameters(SSLParameters sslParameters)
  {
    Builder testee = $$$();

    Builder result = testee.sslParameters(sslParameters);
    return result;
  }

  /**
   * Example call to new method {@link Builder#version}
   * @since 11
   * @see Builder#version
   */
  public Builder version(Version version)
  {
    Builder testee = $$$();

    Builder result = testee.version(version);
    return result;
  }

  /**
   * Example call to new method {@link Builder#authenticator}
   * @since 11
   * @see Builder#authenticator
   */
  public Builder authenticator(Authenticator authenticator)
  {
    Builder testee = $$$();

    Builder result = testee.authenticator(authenticator);
    return result;
  }

  /**
   * Example call to new method {@link Builder#cookieHandler}
   * @since 11
   * @see Builder#cookieHandler
   */
  public Builder cookieHandler(CookieHandler cookieHandler)
  {
    Builder testee = $$$();

    Builder result = testee.cookieHandler(cookieHandler);
    return result;
  }

  /**
   * Example call to new method {@link Builder#priority}
   * @since 11
   * @see Builder#priority
   */
  public Builder priority(int priority)
  {
    Builder testee = $$$();

    Builder result = testee.priority(priority);
    return result;
  }

  /**
   * Example call to new method {@link Builder#proxy}
   * @since 11
   * @see Builder#proxy
   */
  public Builder proxy(ProxySelector proxySelector)
  {
    Builder testee = $$$();

    Builder result = testee.proxy(proxySelector);
    return result;
  }

  /**
   * Example call to new method {@link Builder#build}
   * @since 11
   * @see Builder#build
   */
  public HttpClient build()
  {
    Builder testee = $$$();

    HttpClient result = testee.build();
    return result;
  }

  /**
   * Example call to new method {@link Builder#executor}
   * @since 11
   * @see Builder#executor
   */
  public Builder executor(Executor executor)
  {
    Builder testee = $$$();

    Builder result = testee.executor(executor);
    return result;
  }

  /**
   * Example call to new method {@link Builder#followRedirects}
   * @since 11
   * @see Builder#followRedirects
   */
  public Builder followRedirects(Redirect policy)
  {
    Builder testee = $$$();

    Builder result = testee.followRedirects(policy);
    return result;
  }

  private Builder $$$()
  {
    return null;
  }
}
