package whatisnewin.java.net.http;

import java.net.http.WebSocket.Builder;
import java.util.concurrent.CompletableFuture;
import java.net.http.WebSocket;
import java.net.URI;
import java.net.http.WebSocket.Listener;
import java.time.Duration;

/**
 * This source file was generated by WhatIsNewInJava<br>
 *
 * This class provides an example call to each method in class {@link Builder}
 * that were newly introduced in Java versions 11.<br>
 *
 * {@link Builder} is a completely new class
 * @since 11
 * @see Builder
 */
public final class WhatIsNewInWebSocket$Builder
{
  /**
   * Example call to new method {@link Builder#subprotocols}
   * @since 11
   * @see Builder#subprotocols
   */
  public Builder subprotocols(String mostPreferred, String[] lesserPreferred)
  {
    Builder testee = $$$();

    Builder result = testee.subprotocols(mostPreferred, lesserPreferred);
    return result;
  }

  /**
   * Example call to new method {@link Builder#header}
   * @since 11
   * @see Builder#header
   */
  public Builder header(String name, String value)
  {
    Builder testee = $$$();

    Builder result = testee.header(name, value);
    return result;
  }

  /**
   * Example call to new method {@link Builder#buildAsync}
   * @since 11
   * @see Builder#buildAsync
   */
  public CompletableFuture<WebSocket> buildAsync(URI uri, Listener listener)
  {
    Builder testee = $$$();

    CompletableFuture<WebSocket> result = testee.buildAsync(uri, listener);
    return result;
  }

  /**
   * Example call to new method {@link Builder#connectTimeout}
   * @since 11
   * @see Builder#connectTimeout
   */
  public Builder connectTimeout(Duration timeout)
  {
    Builder testee = $$$();

    Builder result = testee.connectTimeout(timeout);
    return result;
  }

  private Builder $$$()
  {
    return null;
  }
}
